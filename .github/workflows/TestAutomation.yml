name: API Tests
on: [push, pull_request]

jobs:
    test:
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:13
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: arithmetic_db
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.10"

            - name: Install system dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y python3-pip postgresql-client

            - name: Install Python dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt

            - name: Create allure-results directory
              run: mkdir -p allure-results

            - name: Create logs directory
              run: mkdir -p logs

            - name: Set environment variables
              run: |
                  echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/arithmetic_db" >> $GITHUB_ENV
                  echo "ENV=test" >> $GITHUB_ENV
                  echo "SECRET_KEY=test-secret-key" >> $GITHUB_ENV

            - name: Start FastAPI server
              run: python apiserver.py &
              env:
                  PYTHONUNBUFFERED: 1
                  DATABASE_URL: postgresql://postgres:postgres@localhost:5432/arithmetic_db
                  ENV: test
                  SECRET_KEY: test-secret-key

            - name: Wait for server to be ready
              run: sleep 5 # Wait to ensure the server is up

            - name: Run unit tests with coverage
              run: |
                  pytest automation_test_pytest.py -v \
                    --cov=apiserver \
                    --html=report.html \
                    --self-contained-html \
                    --alluredir=./allure-results \
                    --tb=short \
                    --capture=no

            - name: Check if tests passed
              if: failure()
              run: |
                  echo "Tests failed. Check the test report for details."
                  cat report.html

            - name: Run performance tests
              if: success() || failure()
              run: |
                  locust -f performance_test.py \
                    --host=http://localhost:8000 \
                    --users 10 \
                    --spawn-rate 1 \
                    --run-time 1m \
                    --headless

            - name: Upload test report
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: test-report
                  path: report.html
                  retention-days: 7

            - name: Upload allure results
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: allure-results
                  path: ./allure-results
                  retention-days: 7

            - name: Upload logs
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: app-logs
                  path: ./logs
                  retention-days: 7
